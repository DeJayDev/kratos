services:
  auth_psql:
    image: postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    user: "10001:10001"
    volumes:
      - ../.data/authentik/psql:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-authentik}
      POSTGRES_DB: ${PG_DB:-authentik}
    env_file:
      - .env
  auth_keydb:
    image: eqalpha/keydb:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "keydb-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - keydb:/data
  auth_server:
    image: ghcr.io/goauthentik/server:2024.10.4
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: auth_keydb
      AUTHENTIK_POSTGRESQL__HOST: auth_psql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    user: "10001:10001"
    volumes:
      - ../.data/authentik/media:/media
      - ../.data/authentik/custom-templates:/templates
    env_file:
      - .env
    ports:
      - "9000:9000"
      - "9443:9443"
    depends_on:
      - auth_psql
      - auth_keydb
  auth_worker:
    image: ghcr.io/goauthentik/server:2024.10.4
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: auth_keydb
      AUTHENTIK_POSTGRESQL__HOST: auth_psql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    user: "10001:10001"
    volumes:
      - ../.data/authentik/media:/media
      - ../.data/authentik/certs:/certs
      - ../.data/authentik/custom-templates:/templates
    env_file:
      - .env
    depends_on:
      - auth_psql
      - auth_keydb

volumes:
  database:
    driver: local
  keydb:
    driver: local
